
auxfns.lisp,2974
(defun requires requires34,1211
(defvar *paip-files**paip-files*38,1344
(defparameter *paip-directory**paip-directory*48,1858
(defparameter *paip-source* *paip-source*55,2185
(defparameter *paip-binary**paip-binary*59,2313
(defun paip-pathname paip-pathname73,2762
(defun compile-all-paip-files compile-all-paip-files79,2950
(defun compile-paip-file compile-paip-file82,3027
(defun load-paip-file load-paip-file87,3187
(defun find-all find-all155,5340
(defun partition-if partition-if165,5765
(defun maybe-add maybe-add176,6099
(defun seq-ref seq-ref186,6425
(defun maybe-set-fill-pointer maybe-set-fill-pointer194,6669
(defun symbol symbol209,7320
(defun new-symbol new-symbol213,7449
(defun last1 last1217,7589
(defun mappend mappend223,7726
(defun mklist mklist228,7900
(defun flatten flatten232,8010
(defun random-elt random-elt236,8109
(defun member-equal member-equal242,8251
(defun compose compose247,8356
(defvar *dbg-ids* *dbg-ids*253,8509
(defun dbg dbg255,8559
(defun debug debug261,8771
(defun undebug undebug265,8878
(defun dbg-indent dbg-indent272,9095
(defconstant fail fail281,9411
(defconstant no-bindings no-bindings282,9434
(defun pat-match pat-match284,9472
(defun match-variable match-variable294,9931
(defun make-binding make-binding301,10230
(defun binding-var binding-var303,10277
(defun binding-val binding-val307,10371
(defun get-binding get-binding311,10462
(defun lookup lookup315,10575
(defun extend-bindings extend-bindings319,10703
(defun variable-p variable-p328,10987
(defmacro defun-memo defun-memo336,11186
(defun memo memo340,11301
(defun memoize memoize351,11703
(defun clear-memoize clear-memoize358,11977
(defstruct delay delay365,12155
(defmacro delay delay367,12196
(defun force force371,12327
(defmacro defresource defresource380,12613
(defmacro with-resource with-resource400,13478
(defun queue-contents queue-contents416,14015
(defun make-queue make-queue418,14051
(defun enqueue enqueue423,14165
(defun dequeue dequeue430,14313
(defun front front436,14441
(defun empty-queue-p empty-queue-p438,14487
(defun queue-nconc queue-nconc440,14540
(defun sort* sort*447,14696
(defun reuse-cons reuse-cons451,14809
(defun length=1 length=1459,15016
(defun rest3 rest3463,15101
(defun unique-find-if-anywhere unique-find-if-anywhere469,15229
(defun find-if-anywhere find-if-anywhere483,15707
(defmacro define-enumerated-type define-enumerated-type492,15990
(defun not-null not-null506,16479
(defun first-or-nil first-or-nil508,16516
(defun first-or-self first-or-self512,16627
(defmacro defmethod defmethod521,16846
(defun map-into map-into526,16953
(defun complement complement572,18765
(defmacro with-compilation-unit with-compilation-unit578,18940
(defun reduce* reduce*595,19493
(defun reduce reduce599,19671
(defun reduce-vect reduce-vect604,19880
(defun reduce-list reduce-list649,21685

clos.lisp,495
(defstruct account account7,205
(defun account-withdraw account-withdraw10,274
(defun account-deposit account-deposit16,466
(defun account-interest account-interest20,580
(defun new-account new-account28,809
(defun get-method get-method46,1471
(defun send send50,1598
(defun withdraw withdraw57,1804
(defmacro define-class define-class63,1977
(defun make-clause make-clause73,2368
(defun ensure-generic-fn ensure-generic-fn77,2526
(defun generic-fn-p generic-fn-p86,2896

cmacsyma.lisp,1446
(defun exp-p exp-p18,486
(defun exp-args exp-args19,514
(defun binary-exp-p binary-exp-p21,545
(deftype polynomial polynomial27,704
(defsetf main-var main-var29,744
(defsetf coef coef32,820
(defun main-var main-var35,900
(defun coef coef36,950
(defun degree degree37,1006
(defun poly poly39,1062
(defun make-poly make-poly44,1203
(defun prefix->canon prefix->canon50,1381
(defun poly+ poly+65,1975
(defun poly- poly-71,2136
(defun var= var=78,2340
(defun var> var>80,2369
(defun poly+poly poly+poly82,2403
(defun k+poly k+poly92,2756
(defun poly+same poly+same101,3099
(defun copy-poly copy-poly112,3504
(defun poly*poly poly*poly116,3572
(defun k*poly k*poly126,3930
(defun poly*same poly*same140,4425
(defun normalize-poly normalize-poly154,4984
(defun deriv-poly deriv-poly166,5402
(defun prefix->infix prefix->infix196,6611
(defun intersperse intersperse205,6845
(defun canon->prefix canon->prefix214,7098
(defun exponent->prefix exponent->prefix227,7509
(defun args->prefix args->prefix234,7673
(defun canon canon247,8200
(defun canon-simplifier canon-simplifier251,8358
(defun poly^n poly^n257,8506
(defun p-add-into! p-add-into!290,9910
(defun make-rat make-rat301,10304
(defun rat-numerator rat-numerator307,10506
(defun rat-denominator rat-denominator314,10658
(defun rat*rat rat*rat321,10814
(defun rat+rat rat+rat328,11056
(defun rat/rat rat/rat338,11393

compile1.lisp,601
(defun comp comp9,262
(defun comp-begin comp-begin29,1072
(defun comp-if comp-if39,1408
(defun comp-lambda comp-lambda53,1792
(defvar *label-num* *label-num*67,2302
(defun compiler compiler69,2326
(defun comp-show comp-show74,2471
(defun gen gen81,2621
(defun seq seq85,2742
(defun gen-label gen-label89,2830
(defun gen-var gen-var95,3013
(defun gen-set gen-set102,3218
(def-scheme-macro define define111,3461
(defun name! name!118,3672
(defun print-fn print-fn127,3913
(defun show-fn show-fn131,4053
(defun label-p label-p149,4663
(defun in-env-p in-env-p151,4709

compile2.lisp,839
(defun comp comp10,318
(defun arg-count arg-count39,1600
(defun comp-begin comp-begin49,1969
(defun comp-list comp-list57,2305
(defun comp-const comp-const65,2524
(defun comp-var comp-var72,2754
(defun comp-if comp-if78,2924
(defun comp-funcall comp-funcall114,4518
(defparameter *primitive-fns**primitive-fns*154,6123
(defun primitive-p primitive-p166,6805
(defun list1 list1175,7189
(defun list2 list2176,7216
(defun list3 list3177,7247
(defun display display178,7282
(defun newline newline179,7312
(defun gen-set gen-set183,7377
(defun init-scheme-comp init-scheme-comp194,7719
(defun comp-lambda comp-lambda204,8067
(defun gen-args gen-args212,8380
(defun make-true-list make-true-list220,8699
(defun new-fn new-fn227,8976
(defun optimize optimize234,9177
(defun assemble assemble235,9206

compile3.lisp,1312
(defun opcode opcode15,481
(defun args args16,546
(defun arg1 arg117,599
(defun arg2 arg218,654
(defun arg3 arg319,708
(defsetf arg1 arg121,764
(defun assemble assemble25,859
(defun asm-first-pass asm-first-pass34,1118
(defun asm-second-pass asm-second-pass44,1388
(defun show-fn show-fn59,1855
(defstruct ret-addr ret-addr80,2630
(defun is is82,2662
(defun top top88,2832
(defun machine machine90,2867
(defun init-scheme-comp init-scheme-comp195,7310
(defconstant scheme-top-levelscheme-top-level211,7930
(defun scheme scheme219,8121
(defun comp-go comp-go224,8244
(defun optimize optimize233,8405
(defun optimize-1 optimize-1247,8822
(defun gen1 gen1270,9555
(defun target target271,9618
(defun next-instr next-instr272,9682
(defmacro def-optimizer def-optimizer276,9783
(defconstant eof eof286,10126
(defun eof-object? eof-object?287,10150
(defvar *scheme-readtable* *scheme-readtable*288,10185
(defun scheme-read scheme-read290,10231
(defparameter *primitive-fns**primitive-fns*328,11355
(defun quasi-q quasi-q345,12010
(defun combine-quasiquote combine-quasiquote366,12733
(defun scheme-read scheme-read380,13263
(defun convert-numbers convert-numbers384,13409
(defun convert-number convert-number397,13897
(defun sign-p sign-p408,14365

compopt.lisp,0

edge-tab.lisp,0

eliza-pm.lisp,73
(defun eliza eliza9,223
(defun use-eliza-rules use-eliza-rules15,373

eliza.lisp,308
(defun read-line-no-punct read-line-no-punct12,306
(defun punctuation-p punctuation-p19,551
(defun eliza eliza23,647
(defun print-with-spaces print-with-spaces32,932
(defun print-with-spaces print-with-spaces35,1017
(defun mappend mappend40,1115
(defparameter *eliza-rules**eliza-rules*46,1293

eliza1.lisp,615
(defun variable-p variable-p11,328
(defun pat-match pat-match15,459
(defun segment-pattern-p segment-pattern-p29,1076
(defun segment-match segment-match36,1271
(defun segment-match segment-match57,2210
(defun rule-pattern rule-pattern80,3179
(defun rule-responses rule-responses81,3220
(defparameter *eliza-rules**eliza-rules*85,3299
(defun eliza eliza107,4114
(defun use-eliza-rules use-eliza-rules113,4274
(defun switch-viewpoint switch-viewpoint122,4633
(defun flatten flatten129,4822
(defun mklist mklist133,4933
(defun mappend mappend139,5038
(defun random-elt random-elt143,5171

examples.lisp,674
(defexamples 1 17,152
(defexamples 2 298,3931
(defexamples 3 3131,5133
(defexamples 4 4223,9130
(defexamples 5 5420,17507
(defexamples 6 6457,19464
(defexamples 7 7538,23589
(defexamples 8 8570,25327
(defexamples 9 9645,28944
(defexamples 10 10665,29685
(defexamples 11 11680,30297
(defexamples 12 12787,34939
(defexamples 13 13796,35308
(defexamples 14 141007,43210
(defexamples 15 151071,45951
(defexamples 16 161098,47244
(defexamples 17 171106,47588
(defexamples 18 181185,50102
(defexamples 19 191241,52653
(defexamples 20 201356,58014
(defexamples 21 211529,64436
(defexamples 22 221543,65015
(defexamples 23 231604,67639

gps-srch.lisp,127
(defun search-gps search-gps9,220
(defun gps-successors gps-successors24,706
(defun applicable-ops applicable-ops35,1027

gps.lisp,1111
(defun executing-p executing-p11,242
(defun starts-with starts-with15,336
(defun convert-op convert-op19,453
(defun op op25,647
(defvar *ops* *ops*37,986
(defstruct op op39,1039
(defun GPS GPS42,1130
(defun achieve-all achieve-all48,1351
(defun achieve achieve58,1749
(defun member-equal member-equal69,2208
(defun apply-op apply-op74,2313
(defun appropriate-p appropriate-p87,2895
(defun use use93,3064
(defparameter *banana-ops**banana-ops*101,3284
(defun make-maze-ops make-maze-ops130,4257
(defun make-maze-op make-maze-op135,4425
(defparameter *maze-ops**maze-ops*142,4635
(defun GPS GPS150,4924
(defun action-p action-p155,5130
(defun find-path find-path161,5285
(defun destination destination169,5588
(defun make-block-ops make-block-ops175,5729
(defun move-op move-op187,6074
(defun move-ons move-ons194,6299
(defun achieve-all achieve-all202,6437
(defun achieve-each achieve-each207,6624
(defun orderings orderings217,7023
(defun achieve achieve224,7149
(defun appropriate-ops appropriate-ops233,7562
(defun permutations permutations244,7992

gps1.lisp,261
(defvar *state* *state*7,213
(defvar *ops* *ops*9,278
(defstruct op op11,331
(defun GPS GPS14,422
(defun achieve achieve18,555
(defun appropriate-p appropriate-p25,795
(defun apply-op apply-op29,922
(defparameter *school-ops**school-ops*39,1249

grammar.lisp,0

interp1.lisp,940
(defun interp interp7,214
(defun set-var! set-var!29,1114
(defun get-var get-var36,1316
(defun set-global-var! set-global-var!42,1501
(defun get-global-var get-global-var45,1571
(defun extend-env extend-env52,1765
(defparameter *scheme-procs**scheme-procs*56,1894
(defun init-scheme-interp init-scheme-interp61,2094
(defun init-scheme-proc init-scheme-proc70,2441
(defun scheme scheme76,2659
(defun interp interp88,3004
(defun scheme-macro scheme-macro115,4067
(defmacro def-scheme-macro def-scheme-macro118,4150
(defun scheme-macro-expand scheme-macro-expand123,4307
(def-scheme-macro let let132,4551
(def-scheme-macro let* let*136,4679
(def-scheme-macro and and142,4845
(def-scheme-macro or or148,5016
(def-scheme-macro cond cond155,5248
(def-scheme-macro case case165,5633
(def-scheme-macro define define176,6014
(def-scheme-macro delay delay182,6191
(def-scheme-macro letrec letrec185,6259

interp2.lisp,66
(defun interp interp9,226
(defun print-proc print-proc54,2189

interp3.lisp,261
(defun interp interp11,295
(defun scheme scheme42,1505
(defun interp-begin interp-begin53,1870
(defun interp-call interp-call61,2186
(defun map-interp map-interp69,2461
(defun init-scheme-proc init-scheme-proc81,2845
(defun call/cc call/cc91,3175

intro.lisp,583
(defun last-name last-name7,215
(defun first-name first-name11,323
(defparameter *titles**titles*22,656
(defun first-name first-name28,833
(defun numbers-and-negations numbers-and-negations38,1081
(defun number-and-negation number-and-negation42,1223
(defun atomprint atomprint50,1391
(defun power power59,1670
(defun count-atoms count-atoms68,1961
(defun count-all-atoms count-all-atoms75,2180
(defun count-anywhere count-anywhere85,2525
(defun dot-product dot-product94,2804
(defun dot-product dot-product101,3001
(defun dot-product dot-product108,3181

krep.lisp,1183
(defparameter *primitives* *primitives*10,324
(defun add-fact add-fact12,376
(defun fact-present-p fact-present-p25,804
(defun run-attached-fn run-attached-fn31,932
(defun index-new-fact index-new-fact37,1123
(defun test-bears test-bears44,1304
(defmacro a a55,1621
(defmacro each each59,1767
(defmacro ?? ??63,1917
(defun translate-exp translate-exp71,2160
(defun replace-?-vars replace-?-vars119,3946
(defvar *world* *world*132,4378
(defun index-in-world index-in-world134,4445
(defun dtree-index-in-world dtree-index-in-world139,4683
(defun nalist-push nalist-push158,5488
(defun get-world get-world175,5960
(defun use-world use-world188,6435
(defun use-new-world use-new-world199,6802
(defun set-world-current set-world-current206,6996
(defun print-world print-world215,7292
(defun mapc-retrieve-in-world mapc-retrieve-in-world221,7447
(defun retrieve-in-world retrieve-in-world232,7890
(defun retrieve-bagof-in-world retrieve-bagof-in-world240,8119
(defun nlist-delete nlist-delete248,8407
(def-attached-fn ind ind259,8675
(def-attached-fn val val264,8854
(def-attached-fn rel rel270,9077
(def-attached-fn sub sub275,9272

krep1.lisp,711
(defun make-empty-nlist make-empty-nlist12,323
(defun nlist-n nlist-n16,399
(defun nlist-list nlist-list17,465
(defun nlist-push nlist-push19,525
(defvar *predicates* *predicates*34,944
(defun get-dtree get-dtree36,971
(defun clear-dtrees clear-dtrees42,1168
(defun index index50,1379
(defun dtree-index dtree-index55,1557
(defun lookup-atom lookup-atom71,2259
(defun test-index test-index80,2529
(defun fetch fetch91,2824
(defun dtree-fetch dtree-fetch99,3097
(defun dtree-atom-fetch dtree-atom-fetch120,4148
(defun mapc-retrieve mapc-retrieve135,4742
(defun retrieve retrieve146,5074
(defun retrieve-matches retrieve-matches153,5292
(defmacro query-bind query-bind161,5544

krep2.lisp,749
(defun index index10,336
(defvar *search-cut-off* *search-cut-off*21,733
(defun prove-all prove-all23,795
(defun prove prove30,1068
(defparameter *depth-start* *depth-start*53,2040
(defparameter *depth-incr* *depth-incr*55,2125
(defparameter *depth-max* *depth-max*57,2214
(defun top-level-prove top-level-prove62,2336
(defun show-prolog-vars show-prolog-vars74,2733
(defun add-fact add-fact93,3291
(defun retrieve-fact retrieve-fact101,3476
(defun retrieve-conjunction retrieve-conjunction107,3730
(defun mapc-retrieve mapc-retrieve122,4236
(defun retrieve retrieve131,4586
(defun retrieve-bagof retrieve-bagof141,4883
(defun retrieve-setof retrieve-setof147,5101
(defmacro def-attached-fn def-attached-fn156,5384

lexicon.lisp,1107
(defvar *abbrevs* *abbrevs*8,227
(defmacro abbrev abbrev10,265
(defun clear-abbrevs clear-abbrevs14,407
(defun get-abbrev get-abbrev15,452
(defvar *words* *words*19,544
(defmacro word word21,590
(defun add-word add-word25,739
(defun kwote kwote31,940
(defun expand-abbrevs-and-variables expand-abbrevs-and-variables35,1011
(defun word/n word/n60,1785
(defun word/2 word/274,2281
(defun word/3 word/375,2329
(defun word/4 word/476,2381
(defun word/5 word/577,2437
(defun word/6 word/678,2497
(defmacro noun noun82,2598
(defun add-noun-form add-noun-form86,2729
(defmacro verb verb94,3013
(defun add-verb add-verb98,3163
(defun strip-vowel strip-vowel116,3892
(defun vowel-p vowel-p124,4104
(defun passivize-sense passivize-sense128,4203
(defun passivize-subcat passivize-subcat132,4365
(defun slot-number slot-number145,4942
(defun copula copula149,5036
(defun clear-lexicon clear-lexicon160,5452
(defun clear-grammar clear-grammar164,5516
(defmacro try try170,5610
(defun try-dcg try-dcg176,5835
(defun test-unknown-word test-unknown-word195,6631

loop.lisp,1665
(defstruct looploop59,917
(defmacro loop loop66,1119
(defun fill-loop-template fill-loop-template77,1498
(defun add-body add-body93,1943
(defun add-test add-test95,1994
(defun add-var add-var99,2105
(defun parse-loop-body parse-loop-body108,2397
(defun call-loop-fn call-loop-fn115,2628
(defmacro defloop defloop121,2866
(defloop repeat repeat135,3435
(defloop as as143,3641
(defloop for for145,3685
(defun loop-for-arithmetic loop-for-arithmetic176,4763
(defun maybe-temp maybe-temp205,5762
(defloop until until215,5984
(defloop while while217,6028
(defloop always always219,6080
(defloop never never223,6180
(defloop thereis thereis227,6273
(defmacro return-if return-if229,6333
(defmacro loop-finish loop-finish235,6476
(defconstant *acc* *acc*239,6549
(defloop collect collect244,6668
(defloop nconc nconc249,6817
(defloop append append254,6968
(defloop count count257,7052
(defloop sum sum262,7172
(defloop maximize maximize267,7283
(defloop minimize minimize275,7502
(defloop collecting collecting283,7721
(defloop nconcing nconcing284,7750
(defloop appending appending285,7777
(defloop counting counting286,7805
(defloop summing summing287,7832
(defloop maximizing maximizing288,7857
(defloop minimizing minimizing289,7887
(defloop with with295,8007
(defloop when when305,8221
(defloop unless unless308,8308
(defun maybe-set-it maybe-set-it311,8388
(defloop if if318,8588
(defun loop-unless loop-unless320,8607
(defloop do do339,9221
(defloop return return344,9350
(defloop initially initially348,9440
(defloop finally finally353,9600
(defloop named named358,9758

macsyma.lisp,1274
(defun variable-p variable-p9,217
(defun exp-p exp-p20,549
(defun exp-args exp-args21,577
(defun binary-exp-p binary-exp-p23,608
(defun prefix->infix prefix->infix26,680
(defparameter *infix->prefix-rules**infix->prefix-rules*43,1200
(defun infix->prefix infix->prefix56,1580
(defvar *simplification-rules* *simplification-rules*75,2368
(defun ^ ^77,2438
(defun simplifier simplifier79,2483
(defun simp simp85,2637
(defun simplify simplify87,2704
(defun evaluable evaluable102,3260
(defun not-numberp not-numberp109,3520
(defun simp-rule simp-rule111,3563
(defun simp-fn simp-fn117,3750
(defun set-simp-fn set-simp-fn118,3789
(defun simplify-exp simplify-exp120,3846
(defun simplify-by-fn simplify-by-fn131,4326
(defun factorize factorize141,4639
(defun unfactorize unfactorize174,5745
(defun divide-factors divide-factors180,5966
(defun free-of free-of191,6403
(defun find-anywhere find-anywhere195,6511
(defun integrate integrate202,6748
(defun partition-if partition-if228,7935
(defun deriv-divides deriv-divides239,8269
(defun deriv deriv262,9241
(defun integration-table integration-table264,9284
(defun in-integral-table? in-integral-table?271,9521
(defun integrate-from-table integrate-from-table274,9599

macsymar.lisp,0

mycin-r.lisp,559
(defparm name name10,245
(defparm sex sex11,301
(defparm age age12,353
(defparm burn burn13,391
(defparm compromised-host compromised-host15,492
(defparm site site19,593
(defparm days-old days-old21,683
(defparm identity identity25,803
(defparm gram gram29,975
(defparm morphology morphology31,1054
(defparm aerobicity aerobicity33,1138
(defparm growth-conformation growth-conformation34,1195
(defrule 525239,1282
(defrule 717147,1468
(defrule 737354,1646
(defrule 757562,1841
(defrule 10710769,2006
(defrule 16516576,2178

mycin.lisp,1734
(defconstant true true8,245
(defconstant false false9,271
(defconstant unknown unknown10,297
(defun cf-or cf-or12,324
(defun cf-and cf-and22,648
(defconstant cf-cut-off cf-cut-off26,743
(defun true-p true-p29,817
(defun false-p false-p33,920
(defun cf-p cf-p37,1033
(defun get-vals get-vals46,1308
(defun get-cf get-cf50,1424
(defun update-cf update-cf55,1571
(defconstant help-stringhelp-string64,1923
(defun ask-vals ask-vals74,2303
(defun prompt-and-read-vals prompt-and-read-vals94,3156
(defun inst-name inst-name103,3431
(defun check-reply check-reply109,3605
(defun parse-reply parse-reply123,4153
(defmacro defparm defparm136,4679
(defun parm-type parm-type140,4803
(defun get-parm get-parm144,4938
(deftype yes/no yes/no150,5137
(defstruct contextcontext152,5175
(defmacro defcontext defcontext156,5272
(defun new-instance new-instance161,5445
(defun find-out find-out188,6276
(defun use-rules use-rules198,6749
(defun use-rule use-rule203,6929
(defun satisfy-premises satisfy-premises217,7498
(defun eval-condition eval-condition228,7911
(defun reject-premise reject-premise240,8385
(defun conclude conclude245,8556
(defun is is251,8763
(defun parse-condition parse-condition253,8793
(defun emycin emycin262,9126
(defun get-context-data get-context-data268,9322
(defmacro defrule defrule285,10035
(defun check-conditions check-conditions303,10770
(defun report-findings report-findings320,11486
(defun print-rule print-rule333,12037
(defun print-conditions print-conditions341,12371
(defun print-condition print-condition347,12583
(defun cf->english cf->english359,13059
(defun print-why print-why369,13544
(defun mycin mycin388,14335

othello.lisp,2118
(defun cross-product cross-product10,298
(defconstant all-directions all-directions17,509
(defconstant empty empty19,566
(defconstant black black20,606
(defconstant white white21,644
(defconstant outer outer22,682
(deftype piece piece24,743
(defun name-of name-of26,788
(defun opponent opponent28,833
(deftype board board30,896
(defun bref bref32,944
(defsetf bref bref33,992
(defun copy-board copy-board36,1067
(defconstant all-squaresall-squares39,1114
(defun initial-board initial-board42,1205
(defun count-difference count-difference55,1778
(defun valid-p valid-p60,1934
(defun legal-p legal-p64,2085
(defun make-move make-move71,2350
(defun make-flips make-flips79,2591
(defun would-flip? would-flip?86,2869
(defun find-bracketing-piece find-bracketing-piece96,3325
(defun next-to-play next-to-play103,3622
(defun any-legal-move? any-legal-move?114,4042
(defun random-strategy random-strategy119,4212
(defun legal-moves legal-moves123,4319
(defun maximize-difference maximize-difference129,4559
(defun maximizer maximizer133,4715
(defparameter *weights**weights*150,5312
(defun weighted-squares weighted-squares162,5709
(defconstant winning-value winning-value171,6031
(defconstant losing-value losing-value172,6080
(defun final-value final-value174,6130
(defun minimax minimax181,6317
(defun minimax-searcher minimax-searcher206,7392
(defun alpha-beta alpha-beta214,7656
(defun alpha-beta-searcher alpha-beta-searcher241,8897
(defun modified-weighted-squares modified-weighted-squares250,9218
(defun human human291,10582
(defvar *move-number* *move-number*297,10778
(defun othello othello299,10842
(defvar *clock* *clock*321,11792
(defvar *board* *board*322,11851
(defun get-move get-move324,11912
(defun print-board print-board350,13026
(defun time-string time-string369,13834
(defun random-othello-series random-othello-series375,14060
(defun switch-strategies switch-strategies383,14394
(defun othello-series othello-series390,14658
(defun round-robin round-robin406,15337
(defun mobility mobility435,16517

othello2.lisp,1258
(defconstant all-squaresall-squares15,562
(defun alpha-beta-searcher2 alpha-beta-searcher222,759
(defun alpha-beta2 alpha-beta233,1185
(defun negate-value negate-value61,2507
(defun legal-nodes legal-nodes66,2637
(defvar *ply-boards**ply-boards*80,3174
(defun alpha-beta3 alpha-beta383,3257
(defun alpha-beta-searcher3 alpha-beta-searcher3117,4852
(defun put-first put-first126,5180
(defun mobility mobility133,5391
(defvar *edge-table* *edge-table*150,6105
(defconstant edge-and-x-listsedge-and-x-lists153,6211
(defun edge-index edge-index160,6431
(defun edge-stability edge-stability171,6815
(defconstant top-edge top-edge177,7038
(defun init-edge-table init-edge-table179,7087
(defun map-edge-n-pieces map-edge-n-pieces199,7883
(defun possible-edge-moves-value possible-edge-moves-value217,8676
(defun possible-edge-move possible-edge-move228,9079
(defun combine-edge-moves combine-edge-moves237,9466
(defun edge-move-probability edge-move-probability254,10128
(defun count-edge-neighbors count-edge-neighbors273,10871
(defparameter *static-edge-table**static-edge-table*279,11090
(defun static-edge-stability static-edge-stability293,11461
(defun Iago-eval Iago-eval335,13054
(defun Iago Iago354,13894

overview.lisp,1704
(defun tax-bracket tax-bracket7,217
(defstruct player player17,522
(defun determine-winner determine-winner19,563
(defun length1 length126,798
(defun length1.1 length1.134,1051
(defun length2 length241,1284
(defun length3 length350,1585
(defun length4 length457,1810
(defun length5 length561,1960
(defun length6 length665,2110
(defun length7 length774,2438
(defun true true77,2487
(defun length8 length881,2543
(defun length9 length988,2680
(defun length10 length1095,2801
(defun length10-aux length10-aux98,2850
(defun length11 length11105,3021
(defun length12 length12112,3189
(defun product product122,3423
(defmacro while while132,3672
(defmacro while while140,3853
(defmacro while while147,4067
(defun dprint dprint154,4229
(defun pr-rest pr-rest163,4448
(defun pr-rest pr-rest169,4534
(defun same-shape-tree same-shape-tree176,4716
(defun true true180,4829
(defun english->french english->french184,4896
(defstruct node node192,5131
(defvar *db* *db*197,5180
(defun questions questions205,5384
(defun give-up give-up218,5881
(defun average average224,6006
(defun average average232,6204
(defun sqr sqr243,6469
(defun sqr sqr250,6582
(defun sqr sqr257,6694
(defun eat-porridge eat-porridge264,6810
(defun adder adder273,7104
(defun bank-account bank-account279,7235
(defun math-quiz math-quiz288,7515
(defun problem problem293,7656
(defun math-quiz math-quiz302,7931
(defun math-quiz math-quiz309,8134
(defun find-all find-all316,8332
(defmacro while2 while2328,8793
(defun length14 length14335,8959
(defun length-r length-r341,9078
(defun length-r length-r344,9149
(defun length-r length-r348,9242

patmatch.lisp,907
(defun variable-p variable-p11,330
(defun pat-match pat-match15,461
(defun segment-pattern-p segment-pattern-p42,1550
(defun single-pattern-p single-pattern-p48,1789
(defun segment-matcher segment-matcher54,1990
(defun single-matcher single-matcher59,2191
(defun segment-match-fn segment-match-fn64,2388
(defun single-match-fn single-match-fn69,2539
(defun match-is match-is74,2687
(defun match-and match-and85,3075
(defun match-or match-or93,3384
(defun match-not match-not103,3744
(defun segment-match segment-match110,3948
(defun first-match-pos first-match-pos128,4718
(defun segment-match+ segment-match+137,5109
(defun segment-match? segment-match?141,5242
(defun match-if match-if148,5491
(defun pat-match-abbrev pat-match-abbrev157,5861
(defun expand-pat-match-abbrev expand-pat-match-abbrev162,6057
(defun rule-based-translator rule-based-translator169,6356

prolog.lisp,906
(defun clause-head clause-head12,377
(defun clause-body clause-body13,421
(defun get-clauses get-clauses16,512
(defun predicate predicate17,559
(defun args args18,605
(defvar *db-predicates* *db-predicates*20,662
(defmacro <- <-23,745
(defun add-clause add-clause27,852
(defun clear-db clear-db37,1229
(defun clear-predicate clear-predicate41,1357
(defun rename-variables rename-variables45,1479
(defun unique-find-anywhere-if unique-find-anywhere-if51,1672
(defun find-anywhere-if find-anywhere-if65,2150
(defmacro ?- ?-72,2399
(defun prove-all prove-all74,2472
(defun prove prove80,2680
(defun top-level-prove top-level-prove96,3298
(defun show-prolog-vars show-prolog-vars102,3455
(defun continue-p continue-p116,3882
(defun variables-in variables-in126,4127
(defun non-anon-variable-p non-anon-variable-p130,4256
(defun replace-?-vars replace-?-vars133,4328

prolog1.lisp,798
(defun clause-head clause-head10,274
(defun clause-body clause-body11,318
(defun get-clauses get-clauses14,409
(defun predicate predicate15,456
(defvar *db-predicates* *db-predicates*17,503
(defmacro <- <-20,586
(defun add-clause add-clause24,676
(defun clear-db clear-db34,1053
(defun clear-predicate clear-predicate38,1181
(defun prove prove42,1303
(defun prove-all prove-all50,1645
(defun rename-variables rename-variables58,1977
(defun unique-find-anywhere-if unique-find-anywhere-if64,2170
(defun find-anywhere-if find-anywhere-if78,2648
(defmacro ?- ?-85,2897
(defun top-level-prove top-level-prove87,2953
(defun show-prolog-solutions show-prolog-solutions93,3122
(defun show-prolog-vars show-prolog-vars101,3372
(defun variables-in variables-in110,3621

prologc.lisp,2273
(defconstant unbound unbound10,253
(defstruct var var12,286
(defun bound-p bound-p14,326
(defmacro deref deref16,386
(defun unify! unify!22,571
(defun set-binding! set-binding!32,887
(defun print-var print-var37,1020
(defvar *trail* *trail*44,1236
(defun set-binding! set-binding!46,1301
(defun undo-bindings! undo-bindings!54,1530
(defvar *var-counter* *var-counter*59,1734
(defun prolog-compile prolog-compile66,1893
(defun clauses-with-arity clauses-with-arity78,2409
(defun relation-arity relation-arity85,2655
(defun args args90,2804
(defun make-parameters make-parameters92,2861
(defun make-predicate make-predicate97,3011
(defun make-= make-=101,3113
(defun compile-call compile-call103,3146
(defun prolog-compiler-macro prolog-compiler-macro107,3261
(defmacro def-prolog-compiler-macro def-prolog-compiler-macro112,3439
(defun compile-arg compile-arg117,3625
(defun has-variable-p has-variable-p126,3951
(defun proper-listp proper-listp130,4069
(defun maybe-add-undo-bindings maybe-add-undo-bindings135,4194
(defun bind-unbound-vars bind-unbound-vars146,4608
(defmacro <- <-157,4979
(defun make-anonymous make-anonymous161,5086
(defun anonymous-variables-in anonymous-variables-in171,5464
(defun anon-vars-in anon-vars-in175,5608
(defun compile-unify compile-unify190,6247
(defun compile-if compile-if207,7024
(defun compile-unify-variable compile-unify-variable214,7200
(defun bind-variables-in bind-variables-in238,8343
(defun follow-binding follow-binding246,8639
(defun compile-arg compile-arg254,8879
(defun bind-new-variables bind-new-variables270,9551
(defun self-cons self-cons276,9827
(def-prolog-compiler-macro = =278,9861
(defun compile-clause compile-clause289,10263
(defvar *uncompiled* *uncompiled*300,10615
(defun add-clause add-clause303,10691
(defun top-level-prove top-level-prove314,11130
(defun run-prolog run-prolog328,11606
(defun prolog-compile-symbols prolog-compile-symbols339,11971
(defun ignore ignore345,12222
(defun show-prolog-vars/2 show-prolog-vars/2349,12283
(defun deref-exp deref-exp361,12688
(defvar *predicate* *predicate*370,12910
(defun compile-predicate compile-predicate373,12986
(defun compile-body compile-body386,13426

prologc1.lisp,1231
(defconstant unbound unbound10,277
(defstruct var var12,310
(defun bound-p bound-p14,350
(defmacro deref deref16,410
(defun unify! unify!22,595
(defun set-binding! set-binding!32,911
(defun print-var print-var37,1044
(defvar *trail* *trail*44,1260
(defun set-binding! set-binding!46,1325
(defun undo-bindings! undo-bindings!54,1554
(defvar *var-counter* *var-counter*59,1758
(defun prolog-compile prolog-compile66,1917
(defun clauses-with-arity clauses-with-arity78,2433
(defun relation-arity relation-arity85,2679
(defun args args90,2828
(defun compile-predicate compile-predicate92,2885
(defun make-parameters make-parameters104,3281
(defun make-predicate make-predicate109,3431
(defun compile-clause compile-clause113,3533
(defun make-= make-=121,3761
(defun compile-body compile-body123,3794
(defun compile-call compile-call143,4552
(defun prolog-compiler-macro prolog-compiler-macro147,4667
(defmacro def-prolog-compiler-macro def-prolog-compiler-macro152,4845
(def-prolog-compiler-macro = =157,5031
(defun compile-unify compile-unify164,5249
(defun compile-arg compile-arg168,5374
(defun has-variable-p has-variable-p177,5700
(defun proper-listp proper-listp181,5818

prologc2.lisp,1348
(defconstant unbound unbound10,243
(defstruct var var12,276
(defun bound-p bound-p14,316
(defmacro deref deref16,376
(defun unify! unify!22,561
(defun set-binding! set-binding!32,877
(defun print-var print-var37,1010
(defvar *trail* *trail*44,1226
(defun set-binding! set-binding!46,1291
(defun undo-bindings! undo-bindings!54,1520
(defvar *var-counter* *var-counter*59,1724
(defun prolog-compile prolog-compile66,1883
(defun clauses-with-arity clauses-with-arity78,2399
(defun relation-arity relation-arity85,2645
(defun args args90,2794
(defun make-parameters make-parameters92,2851
(defun make-predicate make-predicate97,3001
(defun make-= make-=101,3103
(defun compile-body compile-body103,3136
(defun compile-call compile-call123,3894
(defun prolog-compiler-macro prolog-compiler-macro127,4009
(defmacro def-prolog-compiler-macro def-prolog-compiler-macro132,4187
(def-prolog-compiler-macro = =137,4373
(defun compile-unify compile-unify144,4591
(defun compile-arg compile-arg148,4716
(defun has-variable-p has-variable-p157,5042
(defun proper-listp proper-listp161,5160
(defun compile-predicate compile-predicate166,5285
(defun compile-clause compile-clause179,5735
(defun maybe-add-undo-bindings maybe-add-undo-bindings189,6094
(defun bind-unbound-vars bind-unbound-vars200,6508

prologcp.lisp,624
(defun read/1 read/113,350
(defun write/1 write/117,425
(defun nl/0 nl/021,506
(defun =/2 =/223,551
(defun ==/2 ==/227,632
(defun deref-equal deref-equal33,815
(defun call/1 call/142,1085
(defmacro with-undo-bindings with-undo-bindings54,1385
(defun not/1 not/164,1732
(defun bagof/3 bagof/371,1967
(defun deref-copy deref-copy85,2516
(defun setof/3 setof/393,2853
(defun is/2 is/2107,3398
(defun unbound-var-p unbound-var-p114,3648
(defun var/1 var/1118,3744
(defun lisp/2 lisp/2123,3875
(defun repeat/0 repeat/0129,4083
(defun numberp/1 numberp/1148,4453
(defun atom/1 atom/1152,4529

search.lisp,1441
(defun tree-search tree-search7,178
(defun depth-first-search depth-first-search19,666
(defun binary-tree binary-tree23,827
(defun is is25,881
(defun prepend prepend27,930
(defun breadth-first-search breadth-first-search29,992
(defun finite-binary-tree finite-binary-tree33,1156
(defun diff diff40,1364
(defun sorter sorter44,1478
(defun best-first-search best-first-search49,1640
(defun price-is-right price-is-right53,1824
(defun beam-search beam-search60,2075
(defparameter *cities**cities*72,2609
(defun neighbors neighbors85,3299
(defun city city92,3524
(defun trip trip96,3604
(defun trip trip105,3892
(defconstant earth-diameter earth-diameter115,4208
(defun air-distance air-distance118,4290
(defun xyz-coords xyz-coords125,4590
(defun distance distance134,4912
(defun deg->radians deg->radians140,5153
(defun is is144,5282
(defun path-saver path-saver148,5451
(defun print-path print-path164,6085
(defun show-city-path show-city-path169,6261
(defun map-path map-path176,6515
(defun iter-wide-search iter-wide-search183,6722
(defun graph-search graph-search193,7170
(defun new-states new-states210,7856
(defun next2 next2218,8152
(defun a*-search a*-search220,8194
(defun find-path find-path260,10087
(defun better-path better-path264,10236
(defun insert-path insert-path268,10358
(defun path-states path-states273,10547
(defun search-all search-all280,10722

simple.lisp,785
(defun sentence sentence5,145
(defun noun-phrase noun-phrase6,205
(defun verb-phrase verb-phrase7,254
(defun Article Article8,307
(defun Noun Noun9,348
(defun Verb Verb10,404
(defun one-of one-of14,495
(defun random-elt random-elt18,595
(defun Adj* Adj*24,748
(defun PP* PP*29,827
(defun PP PP35,973
(defun Adj Adj36,1017
(defun Prep Prep37,1076
(defparameter *simple-grammar**simple-grammar*41,1158
(defvar *grammar* *grammar*50,1450
(defun rule-lhs rule-lhs56,1634
(defun rule-rhs rule-rhs60,1708
(defun rewrites rewrites64,1789
(defun generate generate70,1956
(defparameter *bigger-grammar**bigger-grammar*80,2228
(defun generate-tree generate-tree99,2819
(defun generate-all generate-all111,3165
(defun combine-all combine-all121,3537

student.lisp,1005
(defun exp-p exp-p15,374
(defun exp-args exp-args16,402
(defparameter *student-rules* *student-rules*21,500
(defun student student56,1932
(defun translate-to-expression translate-to-expression62,2115
(defun translate-pair translate-pair72,2518
(defun create-list-of-equations create-list-of-equations77,2703
(defun noise-word-p noise-word-p84,2980
(defun make-variable make-variable88,3114
(defun solve-equations solve-equations92,3221
(defun solve solve97,3426
(defun isolate isolate112,4063
(defun print-equations print-equations140,5303
(defconstant operators-and-inversesoperators-and-inverses145,5467
(defun inverse-op inverse-op148,5540
(defun unknown-p unknown-p151,5610
(defun in-exp in-exp154,5651
(defun no-unknown no-unknown160,5821
(defun one-unknown one-unknown167,6031
(defun commutative-p commutative-p175,6324
(defun solve-arithmetic solve-arithmetic179,6404
(defun binary-exp-p binary-exp-p184,6611
(defun prefix->infix prefix->infix187,6683

syntax1.lisp,620
(defvar *grammar* *grammar*11,429
(defun new-tree new-tree18,629
(defun tree-lhs tree-lhs19,671
(defun tree-rhs tree-rhs20,708
(defun parse-lhs parse-lhs22,745
(defparameter *open-categories* *open-categories*24,802
(defun lexical-rules lexical-rules27,895
(defun rules-starting-with rules-starting-with32,1116
(defun complete-parses complete-parses37,1298
(defun parse parse41,1435
(defun extend-parse extend-parse49,1736
(defun append1 append169,2556
(defun parser parser77,2738
(defun use use82,2899
(defparameter *grammar3**grammar3*91,3074
(defparameter *grammar4**grammar4*100,3363

syntax2.lisp,980
(defvar *grammar* *grammar*9,310
(defun parse-lhs parse-lhs18,590
(defun lexical-rules lexical-rules20,647
(defun rules-starting-with rules-starting-with25,868
(defun first-or-nil first-or-nil30,1050
(defun complete-parses complete-parses34,1161
(defun append1 append138,1298
(defun parser parser46,1480
(defun use use51,1641
(defparameter *open-categories* *open-categories*57,1801
(defun parse parse60,1894
(defun extend-parse extend-parse69,2246
(defun apply-semantics apply-semantics92,3264
(defun terminal-tree-p terminal-tree-p101,3575
(defun meanings meanings106,3730
(defparameter *grammar5**grammar5*113,3921
(defun infix-funcall infix-funcall124,4330
(defun integers integers128,4449
(defun ordered-union ordered-union133,4619
(defun ordered-set-difference ordered-set-difference138,4814
(defparameter *grammar6**grammar6*144,5020
(defun union* union*158,5488
(defun set-diff set-diff159,5553
(defun 10*N+D 10*N+D160,5624

syntax3.lisp,1537
(defvar *grammar* *grammar*8,243
(defun use use17,546
(defun parse-lhs parse-lhs27,850
(defun lexical-rules lexical-rules29,907
(defun rules-starting-with rules-starting-with33,1056
(defun first-or-nil first-or-nil38,1238
(defun complete-parses complete-parses42,1349
(defun append1 append146,1486
(defun parser parser50,1583
(defparameter *open-categories* *open-categories*55,1744
(defun lexical-rules lexical-rules58,1837
(defun apply-semantics apply-semantics63,2058
(defun terminal-tree-p terminal-tree-p72,2369
(defun parse parse77,2524
(defun extend-parse extend-parse87,2946
(defun apply-scorer apply-scorer114,4133
(defun tree-score-or-0 tree-score-or-0127,4605
(defun all-parses all-parses130,4694
(defun bracketing bracketing138,5018
(defun meaning meaning145,5256
(defun query-user query-user158,5898
(defparameter *grammar7**grammar7*174,6378
(defun infix-funcall infix-funcall194,7208
(defun 10*N+D 10*N+D198,7327
(defun prefer< prefer<199,7363
(defun prefer-disjoint prefer-disjoint200,7414
(defun prefer-subset prefer-subset201,7483
(defun prefer-not-singleton prefer-not-singleton203,7566
(defun infix-scorer infix-scorer206,7652
(defun arg2 arg2209,7735
(defun rev-scorer rev-scorer211,7796
(defun rev-funcall rev-funcall213,7863
(defun repeat repeat215,7922
(defun span-length span-length221,8039
(defun inv-span inv-span226,8173
(defun sem sem228,8223
(defun integers integers230,8259
(defun sum sum237,8547
(defun permute permute243,8727

tutor.lisp,672
(defvar *chapters* *chapters*9,160
(defun do-examples do-examples11,232
(defmacro defexamples defexamples20,640
(defun do-chapter do-chapter31,1239
(defun add-chapter add-chapter52,1922
(defun find-chapter find-chapter62,2270
(defun do-example do-example68,2498
(defun do-documentation-examples do-documentation-examples113,4154
(defun nearly-equal nearly-equal121,4432
(defmethod set-chapter set-chapter155,5670
(defmethod set-page set-page159,5828
(defmethod set-example set-example163,5976
(defmethod display-example display-example169,6237
(defmethod display-section display-section173,6408
(defmethod output-stream output-stream177,6578

unifgram.lisp,876
(defmacro rule rule9,208
(defun dcg-normal-goal-p dcg-normal-goal-p17,511
(defun dcg-word-list-p dcg-word-list-p19,579
(defun make-dcg make-dcg23,675
(defun make-dcg-body make-dcg-body28,841
(defun make-augmented-dcg make-augmented-dcg54,1810
(defun collect-sems collect-sems74,2585
(defun and*/2 and*/288,3116
(defun conjuncts conjuncts95,3376
(defmacro :ex :ex105,3660
(defvar *examples* *examples*109,3816
(defun get-examples get-examples111,3866
(defun clear-examples clear-examples113,3929
(defun add-examples add-examples115,3977
(defun run-examples run-examples129,4536
(defun remove-punctuation remove-punctuation143,5072
(defun string->list string->list147,5205
(defun punctuation-p punctuation-p151,5335
(defmacro conj-rule conj-rule153,5397
(defun handle-conj handle-conj167,5899
(defun conj-category conj-category174,6141

unify.lisp,243
(defparameter *occurs-check* *occurs-check*9,213
(defun unify unify11,279
(defun unify-variable unify-variable22,695
(defun occurs-check occurs-check32,1110
(defun subst-bindings subst-bindings43,1499
(defun unifier unifier57,2027

waltz.lisp,1193
(defstruct diagram diagram7,186
(defun ambiguous-vertex-p ambiguous-vertex-p15,480
(defun number-of-labelings number-of-labelings19,614
(defun impossible-vertex-p impossible-vertex-p22,689
(defun impossible-diagram-p impossible-diagram-p26,812
(defun possible-labelings possible-labelings30,970
(defun print-labelings print-labelings40,1404
(defun propagate-constraints propagate-constraints56,2048
(defun consistent-labelings consistent-labelings67,2566
(defun search-solutions search-solutions81,3170
(defun labels-for labels-for101,4014
(defun reverse-label reverse-label107,4254
(defun find-vertex find-vertex111,4400
(defun print-vertex print-vertex115,4558
(defun show-vertex show-vertex122,4762
(defun show-diagram show-diagram132,5175
(defun matrix-transpose matrix-transpose143,5604
(defun construct-diagram construct-diagram158,6007
(defun construct-vertex construct-vertex172,6567
(defun v-d-neighbors v-d-neighbors180,6857
(defun make-copy-diagram make-copy-diagram184,6991
(defun ground ground197,7502
(defun find-labelings find-labelings209,7949
(defmacro defdiagram defdiagram214,8135
(defun check-diagram check-diagram219,8360
