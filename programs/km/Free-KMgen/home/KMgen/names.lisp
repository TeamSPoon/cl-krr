"word"
are
assertions
block-projection-for
catch-explanations
instance
prototypes
sentence-parts


;;;----------------INFIX
property-div
property-eq
property-gt
property-gte
property-lt
property-lte
property-minus
property-mult
property-plus
time-eq
time-gt
time-gte
time-lt
time-lte
times

;; --------- MY-INFIX
convert-unit
count-in
divide-in-sit
preleve-in-sit
value-div
value-eq
value-gt
value-gte
value-lt
value-lte
value-minus
value-mult
value-plus

"slot"
;;; --------------SLOTS

;; ----- Slot for Slots
cardinality
combine-values-by-appending
domain
dont-cache-values
fluent-status
ignore-inverses
inherit-with-overrides
inverse
inverse12
inverse2
inverse3
range
slots-to-opportunistically-evaluate
subslots
superslots

;; ------- Slot for Classes/Instances
aggregation-function
add-list
after-situation
after-situation-of
before-situation
before-situation-of
called
classes
del-list
domain-of
element-type
fluent-status-of
instance-of
instances
member-of
members
name
ncs-list
next-situation
pcs-list
prev-situation	
prototype-of
prototype-participant-of
prototype-participants
prototype-scope
range-of
subclasses
subsituations
superclasses
supersituations
uniquely-called

"word"
;;; ---------KM-PARMATERS
checkkboff
checkkbon
disable-classification
disable-installing-inverses
disable-slot-checking
enable-classification
enable-installing-inverses
enable-slot-checking
fail-noisily
fail-quietly
no-sanity-checks
nocomments
sanity-check
sanity-checks
spy
start-logging
stop-logging
requires-km-version
trace
tracekm
unspy
untrace
untracekm

;;; --------------------KM-FUNCTIONS
all-classes
all-instances
all-prototypes
all-subclasses
all-subslots
all-superclasses
all-supersituations
andify
append
bag
bag-length
clean-taxonomy
clear-evaluation-cache
clear-explanations
clear-obj-stack
clear-situations
clone
cloned-from
comm
covers
curr-situation
delete
do
do-and-next
do-plan
do-script
eval
evaluate
evaluate-all
evaluate-paths
exp
explain-all
explanations
fastload-kb
fastsave-kb
floor
format
ignore-result
install-all-subclasses
instance-of-is-fluent
instance-of-is-nonfluent
km-format
license
load-triples
log
make-phrase
make-sentence
new-context
no-explanations
no-inheritance
now-has
print
remove-subsumees
remove-subsumers
reset-done
reset-kb
restore-kb
reverse
rules-for
save-kb
scan-kb
see-theory
seq
seq-length
set-constraint
set-filter
setq
show-bindings
show-context
show-explanations
show-explanations-xml
show-obj-stack
showme
showme-all
showme-here
sqrt
store-kb
version
visible-theories
write-kb

;;; ------ TEST-UNFICATINO-FUNCTIONS
&
&!
&&
&&!
&+
&?
*
+
-
/
/=
/==
<
<=
<>
=
==
===
>
>=
@

anonymous-instancep
fluent-instancep
includes
is
is-covered-by
is-subsumed-by
is-superset-of
isa
numberp
subsumes

;;

;; ---------------KM-WORDS

;; ---------------KM- Constraint

^
a
a+
a-prototype
abs
QUOTE
UNQUOTE

:args
:bag
:function
:pair
:seq
:set
:triple

allof
allof2
also-has
an
and


at-least
at-most
comments
constraint
constraints-for
elements
else
end-situation
end-theory
every
exactly
excluded-values
forall
forall-bag
forall-bag2
forall-seq
forall-seq2
forall2
has
has-clones
has-definition
has-value
hide-theory
if
in-every-situation
in-situation
in-theory
must
must-be-a
mustnt-be-a
not
of
oneof
oneof2
or
possible-values
quote
some
the
the+
the-class
the1
the2
the3
theN
theNth
thelast
then
theoneof
theoneof2
where
with


Aggregate
Aggregation-Slot
Bag
Bag-Aggregation-Slot
Boolean
Cardinality
Class
Exhaustive-Partition
Fluent-Status
Integer
It
It2
Number
Pair
Partition
Self
Seq-Aggregation-Slot
Sequence
Set-Aggregation-Slot
Situation
Slot
String
TheValue
TheValues
Theory
Thing
Triple


