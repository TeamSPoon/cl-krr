(deftheory global  (val (in 1 f1) 1 on)  (val (in 2 f1) 1 off)  (val (in 3 f1) 1 on)  (isa x1 xorg)  (isa x2 xorg)  (isa a1 andg)  (isa a2 andg)  (isa o1 org)  (conn (in 1 f1) (in 1 x1))  (conn (in 1 f1) (in 1 a1))  (conn (in 2 f1) (in 2 x1))  (conn (in 2 f1) (in 2 a1))  (conn (in 3 f1) (in 2 x2))  (conn (in 3 f1) (in 1 a2))  (conn (out 1 x1) (in 1 x2))  (conn (out 1 x1) (in 2 a2))  (conn (out 1 a2) (in 1 o1))  (conn (out 1 a1) (in 2 o1))  (conn (out 1 x2) (out 1 f1))  (conn (out 1 o1) (out 2 f1))  (<= (val (out 1 $x) $t on)      (isa $x andg)      (val (in 1 $x) $t on)      (val (in 2 $x) $t on))  (<= (val (out 1 $x) $t off)      (isa $x andg)      (val (in $n $x) $t off))  (<= (val (out 1 $x) $t off)      (isa $x org)      (val (in 1 $x) $t off)      (val (in 2 $x) $t off))  (<= (val (out 1 $x) $t on)      (isa $x org)      (val (in $n $x) $t on))  (<= (val (out 1 $x) $t off)      (isa $x xorg)      (val (in 1 $x) $t $z)      (val (in 2 $x) $t $z))  (<= (val (out 1 $x) $t on)      (isa $x xorg)      (val (in 1 $x) $t on)      (val (in 2 $x) $t off))  (<= (val (out 1 $x) $t on)      (isa $x xorg)      (val (in 1 $x) $t off)      (val (in 2 $x) $t on))  (<= (val $y $t $z)      (conn $x $y)      (val $x $t $z)))*(stpp '(val (out 1 f1) 1 off))t(stpp '(val (out 2 f1) 1 on))t(reset)done